---
import Layout from "../layouts/Layout.astro";

interface Pokemon {
    id: string;
    name: string;
    image: string;
}
const fetchingCharater = async () => {
    const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
    if (!response.ok) {
        throw new Error("Error al obtener los characteres");
    }
    const data = await response.json();

    // Aquí recorremos todos los Pokémon y hacemos una petición para obtener el sprite
    const pokemons = await Promise.all(
        data.results.map(async (poke: { name: string; url: string }) => {
            const res = await fetch(poke.url);
            const details = await res.json();
            return {
                id: details.id,
                name: details.name,
                image: details.sprites.front_default,
            };
        }),
    );

    return pokemons;
};
const pokemon = await fetchingCharater();
---

<Layout>
    <section class="flex flex-row mt-10">
        <div
            title="PokeApi"
            class="list-none mt-10 pb-10 mr-70 grid grid-cols-2 gap-x-90 gap-y-5"
        >
            {
                pokemon.map((poke: Pokemon) => (
                    <li
                        id="list-pokemon"
                        data-key={poke.id}
                        class="w-[300px] border border-black p-5 rounded-2xl bg-gray-300 font-bold hover:scale-105 transition duration-300 "
                    >
                        <div onclick="dialog.showModal()">
                            <img src={poke.image} alt={poke.name} />
                            <p>{poke.name}</p>
                            <div class="text-gray-300 justify-center bg-blue-700 mt-5 rounded-md p-2 cursor-pointer hover:bg-blue-500 transition duration-300 inline-block">
                                <button
                                    class="btn-agregar"
                                    data-id={poke.id}
                                    data-name={poke.name}
                                    data-img={poke.image}
                                >
                                    Agregar Pokemon
                                </button>
                            </div>
                        </div>
                    </li>
                ))
            }
        </div>
        <div class="mt-10 ml-30 w-[100%] h-[20vh]">
            <div
                id="contenedor-seleccion"
                class="contenedor-seleccion w-full h-[350px] bg-blue-200 border-2 border-dotted p-4 gap-4 overflow-x-scroll overflow-y-hidden flex flex-col flex-wrap"
            >
            </div>
            <div class="mt-5">
                <span
                    id="totalCharacters"
                    class="text-xl font-bold font-mono text-gray-300"
                    >Total: 0</span
                >
                <div class="bg-blue-600 rounded-md w-[100%] text-center">
                    <button id="pagar" class="p-2 font-bold font-mono"
                        >Pagar</button
                    >
                </div>
            </div>
        </div>
        <div class="flex justify-center items-center">
            <!-- <dialog id="dialog" class="w-[30%] h-[40vh] text-center">
                <p>Este es mi dialogo</p>
                <button class="bg-red-400" onclick="dialog.close()"
                    >Cerrar Modal</button
                >
            </dialog> -->
        </div>
    </section>
</Layout>
<script>
    interface PokemonData {
        id: number;
        name: string;
        url: string;
    }

    // const dialog = document.querySelector("#dialog") as HTMLDialogElement;

    // const openDialog = () => {
    //     dialog.showModal();
    // };

    // const closeDialog = () => {
    //     dialog.close();
    // };

    const contenedor = document.getElementById("contenedor-seleccion")!;

    // Función para actualizar el total de personajes
    const updateTotal = () => {
        const totalElements = document.querySelector("#totalCharacters")!;
        const charactersOnly = contenedor.querySelectorAll("div[data-id]");
        totalElements.textContent = `Total: ${charactersOnly.length}`;
    };
    updateTotal();

    //Función para cargar personajes desde el localStorage
    const loadFromLocalStorage = () => {
        const characterList = JSON.parse(
            localStorage.getItem("CharacterList") || "[]",
        );
        contenedor.innerHTML = "";

        if (characterList.length === 0) {
            contenedor.innerHTML = `
            <p class='text-black text-2xl text-center mt-15 font-mono'>Añade tu personaje al Carrito</p>
            <img class='carritoSvg' src='/carrito.svg'/>
            `;
        } else {
            characterList.forEach((poke: PokemonData) => {
                const nuevo = document.createElement("div");
                nuevo.className = "border p-2 mb-2 mt-1 rounded bg-white";
                nuevo.dataset.id = poke.id.toString();

                nuevo.innerHTML = `
                <img src='/delete.svg' class="btn-eliminar bg-red-400 text-white rounded-md p-1 mb-2 ml-40"/>
                <img src="${poke.url}" alt="${poke.name}" class='w-full rounded'/>
                <p class='text-center font-semibold mt-2'>${poke.name}</p>
                `;
                contenedor.appendChild(nuevo);
            });
        }
        updateTotal();
    };

    loadFromLocalStorage();

    document.body.addEventListener("click", (e) => {
        const target = e.target as HTMLElement | null;

        if (target && target.classList.contains("btn-agregar")) {
            const name = target.dataset.name ?? "";
            const url = target.dataset.img ?? "";
            const id = target.dataset.id ?? "";

            if (!contenedor || !id || !name || !url) return;

            if (contenedor.querySelector(`[data-id="${id}"]`)) return;

            const nuevo = document.createElement("div");
            nuevo.className = "border p-2 mb-2 mt-1 rounded bg-white";
            nuevo.dataset.id = id;

            nuevo.innerHTML = `
            <img src='/delete.svg' class="btn-eliminar bg-red-500 text-white rounded-md p-1 mb-2 ml-40"/>
            <img src="${url}" alt="${name}" class="w-full rounded" />
            <p class="text-center font-semibold mt-2">${name}</p>
            `;
            contenedor.appendChild(nuevo);

            const carritoMsg = contenedor.querySelector("p.text-2xl");
            const carritoSvg = contenedor.querySelector(".carritoSvg");
            if (carritoMsg) {
                carritoMsg.remove();
            }
            if (carritoSvg) {
                carritoSvg.remove();
            }

            //Guardar en el localStorage
            const characterList = JSON.parse(
                localStorage.getItem("CharacterList") || "[]",
            );
            characterList.push({ id, name, url });
            localStorage.setItem(
                "CharacterList",
                JSON.stringify(characterList),
            );

            updateTotal();
        }

        // Manejo del botón de eliminar
        if (target && target.classList.contains("btn-eliminar")) {
            const characterDiv = target.closest("div[data-id]") as HTMLElement;
            if (characterDiv) {
                const id = characterDiv.dataset.id;

                contenedor?.removeChild(characterDiv);

                let CharacterList: PokemonData[] = JSON.parse(
                    localStorage.getItem("CharacterList") || "[]",
                );
                CharacterList = CharacterList.filter(
                    (poke: PokemonData) => poke.id.toString() !== id,
                );

                localStorage.setItem(
                    "CharacterList",
                    JSON.stringify(CharacterList),
                );
                if (contenedor.children.length === 0) {
                    contenedor.innerHTML = `
                    <p class='text-black text-2xl text-center mt-15 font-mono'>Añade tu personaje al Carrito</p>
                    <img class='carritoSvg' src='/carrito.svg'/>
                    `;
                }
                updateTotal();
            }
        }
    });
</script>
<style>
    .contenedor-seleccion {
        box-shadow: 15px 15px 15px 5px rgba(0, 0, 0, 334.5);
    }
</style>
